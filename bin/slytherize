<?php

/**
 * Creates a series of directories
 */

$directories = array(
	'app/',
	'app/config/',
	'app/controllers/',
	'app/libraries/',
	'app/models/',
	'app/views/'
);

foreach ($directories as $directory) {
	if ( ! file_exists($directory)) {
		mkdir($directory);
	}

	if ( ! file_exists($directory . 'index.html')) {
		$errorMessage = 'There is something wrong to the page you requested!';
		$file = fopen($directory . 'index.html', 'wb');

		file_put_contents($directory . 'index.html', $errorMessage);
		fclose($file);
	}
}

/**
 * Create the "Welcome" controller and "view" files
 * and also a user-friendly error page
 */

if ( ! file_exists('app/controllers/Welcome.php')) {
	$welcome =
'<?php namespace Controllers;

use Slytherin\Controller;
use Slytherin\View;

/**
 * Welcome Controller Class
 */

class Welcome extends Controller {

	public function index()
	{
		return View::render(\'welcome/index\');
	}

}';

	$file = fopen('app/controllers/Welcome.php', 'wb');
	file_put_contents('app/controllers/Welcome.php', $welcome);
	fclose($file);
}

if ( ! file_exists('app/views/welcome/')) {
	mkdir('app/views/welcome/');

	$welcomeIndex = 'Hello world!';

	$file = fopen('app/views/welcome/index.php', 'wb');
	file_put_contents('app/views/welcome/index.php', $welcomeIndex);
	fclose($file);
}

if ( ! file_exists('app/views/404.php')) {
	$errorMessage = 'There is something wrong to the page you requested!';

	$file = fopen('app/views/404.php', 'wb');
	file_put_contents('app/views/404.php', $errorMessage);
	fclose($file);
}

/**
 * Creates a .htacess for clean urls
 */

$htaccess =
'RewriteEngine on
Options +FollowSymLinks
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
RewriteCond %{REQUEST_FILENAME} !-l
RewriteRule .* index.php/$0 [PT,L]';

$file = fopen('.htaccess', 'wb');
chmod('.htaccess', 0777);
file_put_contents('.htaccess', $htaccess);
fclose($file);

/**
 * Creates an index.php as the centralized entry point for handling requests
 */

if ( ! file_exists('index.php')) {
	$index =
'<?php

/**
 * Load the Composer Autoloader
 */

include \'vendor/autoload.php\';

/**
 * This is where you can change the environment
 * of your application. You can choose from "development" and
 * "production".
 *
 * According to Patrick Louys, never show any errors in your
 * production environment. A stack trace or even just a
 * simple error message can help someone to gain access to
 * your system. Always show a user friendly error page
 * instead and send an email to yourself, write to a log or
 * something similar. So only you can see the errors in the
 * production environment.
 *
 * References:
 * https://github.com/filp/whoops
 * https://github.com/PatrickLouys/no-framework-tutorial/blob/master/03-error-handler.md
 */

error_reporting(E_ALL);

$environment = \'development\';

/**
* Register the error handler
*/

$whoops = new \Whoops\Run;

if ($environment !== \'production\') {
	$whoops->pushHandler(new \Whoops\Handler\PrettyPageHandler);
} else {
	$whoops->pushHandler(function ($error) {
		echo \Slytherin\View::render(\'404\');
	});
}

$whoops->register();

/**
 * Import the Slytherin namespace
 */

use Slytherin\Application;
use Slytherin\Config;

/**
 * Load Pux\'s Mux (https://github.com/c9s/Pux)
 */

$route = new \Pux\Mux();

/**
 * Initialize and Run Slytherin
 */

$app = new Application($route);
$app->run();';

	$file = fopen('index.php', 'wb');
	chmod('index.php', 0777);
	file_put_contents('index.php', $index);
	fclose($file);
}

/**
 * Create a databases.php for storing database credentials
 */

if ( ! file_exists('app/config/databases.php')) {
	$database =
'<?php

/**
 * Database Configuration
 * 
 * This is where you will setup your database credentials that
 * will be used by Slytherin\Model class. Take note that it will
 * use the PDO driver that is already included in PHP.
 */

return array(
	\'default\' => array(
		\'hostname\' => \'localhost\',
		\'username\' => \'root\',
		\'password\' => \'\',
		\'database\' => \'\',
		\'driver\'   => \'mysql\'
	)
);';

	$file = fopen('app/config/databases.php', 'wb');
	file_put_contents('app/config/databases.php', $database);
	fclose($file);
}

/**
 * Create a routes.php for handling the user specified routes
 */

if ( ! file_exists('app/config/routes.php')) {
	$routes =
'<?php

/**
 * Application Routes
 * 
 * Here is where you can register all of the routes for an application.
 *
 * If your controller has one or more of the following methods: 
 * 	create(), destroy(), edit(), index(), show(), store(), and update()
 * You don\'t need to include them here, the routing for them is already done by Slytherin.
 *
 * "Pux" was used as the router for Slytherin. For more information on
 * how to create a route, just go here: http://c9s.github.io/Pux
 */

/**
 * Default controller
 */

$route->any(\'/\', \'Controllers\\\\Welcome:index\');';

	$file = fopen('app/config/routes.php', 'wb');
	file_put_contents('app/config/routes.php', $routes);
	fclose($file);
}

echo 'Slytherin is now properly setup!' . PHP_EOL;